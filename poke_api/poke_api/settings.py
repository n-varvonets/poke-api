"""
Django settings for poke_api project.

Generated by 'django-admin startproject' using Django 4.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path
import os
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-_yoa$ihl2fb8p^4m&e6$8at4z+$ana%72a09o3n_du5=h^d9xj'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]


# Application definition

INSTALLED_APPS = [
    'core',

    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    "crispy_forms",
    "crispy_bootstrap5",

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'poke_api.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],  # project labeled templates - using when have 1+ apps as main template and indicate his here
        # if we have just 1 app - it doesn't necessary and we can use templates JUST INTO app-labeled
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'poke_api.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases
#
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': 'poke_db',
#         'USER': 'admin',
#         'PASSWORD': 'QQQqqq111',
#         'HOST': 'pokedb.chc4np2txjpi.eu-central-1.rds.amazonaws.com',
#         'PORT': 3306
#     }
# }
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'poke_api',
        'USER': 'postgres',
        'PASSWORD': '1000g0001',
        'HOST': 'localhost',
        'PORT': '5432',
    }
}
# CREATE DATABASE poke_api;
# CREATE USER admin_nick WITH PASSWORD 'admin_nick';
# GRANT ALL PRIVILEGES ON DATABASE poke_api TO admin_nick;
# python manage.py createsuperuser  (poke_admin | admin)

# if os.environ.get('GITHUB_WORKFLOW'):
#     DATABASES = {
#         'default': {
#            'ENGINE': 'django.db.backends.postgresql',
#            'NAME': 'github_actions',
#            'USER': 'postgres',
#            'PASSWORD': 'postgres',
#            'HOST': '127.0.0.1',
#            'PORT': '5432',
#         }
#     }

# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True

# crispy forms make styling of forms(register). For using it need to indicate in html: {% load crispy_forms_tags %} and {{ user_form | crispy }}
CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"
CRISPY_TEMPLATE_PACK = "bootstrap5"

# login redirect as using build django form login ---> was first imported in .core.urls
LOGIN_REDIRECT_URL = 'list_pokes_page'  # so after login django will redirect response in .core.urls. name = 'list_pokes_page'
LOGIN_URL = 'login'
LOGOUT_URL = 'logout'  # need to indicate object of Logout class imported in .urls.py and in setting lift up our app 'core'

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
